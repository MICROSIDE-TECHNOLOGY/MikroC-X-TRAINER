;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15/10/2021 01:55:22 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF010EF00  	GOTO        8192
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_main:
0x2000	0xF010ECA6  	CALL        8524, 0
;SERIAL.c,21 :: 		void main() org 0x2000               //Se define el registro a partir del cual se alamcenara el codigo lógico
;SERIAL.c,23 :: 		ANSELC = 0;
0x2004	0x010F      	MOVLB       15
0x2006	0x6B5D      	CLRF        ANSELC, 1
;SERIAL.c,24 :: 		TRISB = 0x00;                      //Puerto B como salida
0x2008	0x6A93      	CLRF        TRISB 
;SERIAL.c,25 :: 		LATA4_bit = 0;                     //Pin A1 en estado bajo
0x200A	0x9889      	BCF         LATA4_bit, BitPos(LATA4_bit+0) 
;SERIAL.c,26 :: 		TRISA4_bit = 0;                    //Pin A1 como salida
0x200C	0x9892      	BCF         TRISA4_bit, BitPos(TRISA4_bit+0) 
;SERIAL.c,27 :: 		TRISA2_bit = 1;                    //Pin A2 como salida
0x200E	0x8492      	BSF         TRISA2_bit, BitPos(TRISA2_bit+0) 
;SERIAL.c,28 :: 		ANSA2_bit = 0;                     //Pin A1 como digital
0x2010	0x955B      	BCF         ANSA2_bit, BitPos(ANSA2_bit+0), 1
;SERIAL.c,29 :: 		UART1_Init(9600);                  //Se asigna la velocidad del baudrate
0x2012	0x86B8      	BSF         BAUDCON, 3, 0
0x2014	0x0E04      	MOVLW       4
0x2016	0x6EB0      	MOVWF       SPBRGH 
0x2018	0x0EE1      	MOVLW       225
0x201A	0x6EAF      	MOVWF       SPBRG 
0x201C	0x84AC      	BSF         TXSTA, 2, 0
0x201E	0xD859      	RCALL       _UART1_Init
;SERIAL.c,30 :: 		while(1){
L_main0:
;SERIAL.c,31 :: 		if (UART1_Data_Ready() == 1) {   //Pregunta si ha recibido algún dato por el puerto serial
0x2020	0xD883      	RCALL       _UART1_Data_Ready
0x2022	0x5000      	MOVF        R0, 0 
0x2024	0x0A01      	XORLW       1
0x2026	0xE123      	BNZ         L_main2
;SERIAL.c,33 :: 		char Caracter = UART1_Read();  //Guarda el caracter
0x2028	0xD82B      	RCALL       _UART1_Read
0x202A	0xF03FC000  	MOVFF       R0, main_Caracter_L2
;SERIAL.c,35 :: 		if (Caracter == '0') {
0x202E	0x5000      	MOVF        R0, 0 
0x2030	0x0A30      	XORLW       48
0x2032	0xE107      	BNZ         L_main3
;SERIAL.c,36 :: 		LED_OFF;                     //Apaga el LED
0x2034	0x9889      	BCF         LATA4_bit, BitPos(LATA4_bit+0) 
;SERIAL.c,37 :: 		UART1_Write_Text("LED APAGADO");
0x2036	0x0E23      	MOVLW       ?lstr1_SERIAL
0x2038	0x6E40      	MOVWF       FARG_UART1_Write_Text_uart_text 
0x203A	0x0E00      	MOVLW       hi_addr(?lstr1_SERIAL)
0x203C	0x6E41      	MOVWF       FARG_UART1_Write_Text_uart_text+1 
0x203E	0xD829      	RCALL       _UART1_Write_Text
;SERIAL.c,38 :: 		}
0x2040	0xD016      	BRA         L_main4
L_main3:
;SERIAL.c,39 :: 		else if (Caracter == '1') {
0x2042	0x503F      	MOVF        main_Caracter_L2, 0 
0x2044	0x0A31      	XORLW       49
0x2046	0xE107      	BNZ         L_main5
;SERIAL.c,40 :: 		LED_ON;                      //Enciende el LED
0x2048	0x8889      	BSF         LATA4_bit, BitPos(LATA4_bit+0) 
;SERIAL.c,41 :: 		UART1_Write_Text("LED ENCENDIDO");
0x204A	0x0E15      	MOVLW       ?lstr2_SERIAL
0x204C	0x6E40      	MOVWF       FARG_UART1_Write_Text_uart_text 
0x204E	0x0E00      	MOVLW       hi_addr(?lstr2_SERIAL)
0x2050	0x6E41      	MOVWF       FARG_UART1_Write_Text_uart_text+1 
0x2052	0xD81F      	RCALL       _UART1_Write_Text
;SERIAL.c,42 :: 		}
0x2054	0xD00C      	BRA         L_main6
L_main5:
;SERIAL.c,43 :: 		else if (Caracter == '?') {
0x2056	0x503F      	MOVF        main_Caracter_L2, 0 
0x2058	0x0A3F      	XORLW       63
0x205A	0xE109      	BNZ         L_main7
;SERIAL.c,44 :: 		if (BOTON==1) {              //Pregunta el estado del botón
0x205C	0xA480      	BTFSS       PORTA, 2 
0x205E	0xD004      	BRA         L_main8
;SERIAL.c,45 :: 		UART1_Write('0');          //Envía un 0 si el botón no está presionado
0x2060	0x0E30      	MOVLW       48
0x2062	0x6E44      	MOVWF       FARG_UART1_Write_data_ 
0x2064	0xD806      	RCALL       _UART1_Write
;SERIAL.c,46 :: 		} else {
0x2066	0xD003      	BRA         L_main9
L_main8:
;SERIAL.c,47 :: 		UART1_Write('1');          //Envía un 1 si el botón está presionado
0x2068	0x0E31      	MOVLW       49
0x206A	0x6E44      	MOVWF       FARG_UART1_Write_data_ 
0x206C	0xD802      	RCALL       _UART1_Write
;SERIAL.c,48 :: 		}
L_main9:
;SERIAL.c,49 :: 		}
L_main7:
L_main6:
L_main4:
;SERIAL.c,50 :: 		}
L_main2:
;SERIAL.c,51 :: 		}
0x206E	0xD7D8      	BRA         L_main0
;SERIAL.c,52 :: 		}
L_end_main:
0x2070	0xD7FF      	BRA         $+0
; end of _main
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x2072	0xB2AC      	BTFSC       TXSTA, 1 
0x2074	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x2076	0x0000      	NOP
0x2078	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x207A	0xFFADC044  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x207E	0x0012      	RETURN      0
; end of _UART1_Write
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x2080	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x2084	0xA2AB      	BTFSS       RCSTA, 1 
0x2086	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x2088	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x208A	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x208C	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x2090	0x0012      	RETURN      0
; end of _UART1_Read
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x2092	0x6A43      	CLRF        UART1_Write_Text_counter_L0 
;__Lib_UART_c67.c,69 :: 		
0x2094	0xFFE9C040  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x2098	0xFFEAC041  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x209C	0xF042CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x20A0	0x5042      	MOVF        UART1_Write_Text_data__L0, 0 
0x20A2	0x0A00      	XORLW       0
0x20A4	0xE00D      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x20A6	0xF044C042  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x20AA	0xDFE3      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x20AC	0x2A43      	INCF        UART1_Write_Text_counter_L0, 1 
;__Lib_UART_c67.c,73 :: 		
0x20AE	0x5043      	MOVF        UART1_Write_Text_counter_L0, 0 
0x20B0	0x2440      	ADDWF       FARG_UART1_Write_Text_uart_text, 0 
0x20B2	0x6EE9      	MOVWF       FSR0L 
0x20B4	0x0E00      	MOVLW       0
0x20B6	0x2041      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0 
0x20B8	0x6EEA      	MOVWF       FSR0L+1 
0x20BA	0xF042CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x20BE	0xD7F0      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x20C0	0x0012      	RETURN      0
; end of _UART1_Write_Text
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x20C2	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x20C4	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x20C8	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x20CA	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x20CC	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x20CE	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x20D0	0x0012      	RETURN      0
; end of ___CC2DW
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x20D2	0x0E72      	MOVLW       _UART1_Write
0x20D4	0x6E2F      	MOVWF       _UART_Wr_Ptr 
0x20D6	0x0E20      	MOVLW       hi_addr(_UART1_Write)
0x20D8	0x6E30      	MOVWF       _UART_Wr_Ptr+1 
0x20DA	0x0E44      	MOVLW       FARG_UART1_Write_data_
0x20DC	0x6E31      	MOVWF       _UART_Wr_Ptr+2 
0x20DE	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x20E0	0x6E32      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_c67.c,19 :: 		
0x20E2	0x0E80      	MOVLW       _UART1_Read
0x20E4	0x6E37      	MOVWF       _UART_Rd_Ptr 
0x20E6	0x0E20      	MOVLW       hi_addr(_UART1_Read)
0x20E8	0x6E38      	MOVWF       _UART_Rd_Ptr+1 
0x20EA	0x0E00      	MOVLW       0
0x20EC	0x6E39      	MOVWF       _UART_Rd_Ptr+2 
0x20EE	0x0E00      	MOVLW       0
0x20F0	0x6E3A      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67.c,20 :: 		
0x20F2	0x0E28      	MOVLW       _UART1_Data_Ready
0x20F4	0x6E3B      	MOVWF       _UART_Rdy_Ptr 
0x20F6	0x0E21      	MOVLW       hi_addr(_UART1_Data_Ready)
0x20F8	0x6E3C      	MOVWF       _UART_Rdy_Ptr+1 
0x20FA	0x0E00      	MOVLW       0
0x20FC	0x6E3D      	MOVWF       _UART_Rdy_Ptr+2 
0x20FE	0x0E00      	MOVLW       0
0x2100	0x6E3E      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67.c,21 :: 		
0x2102	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x2104	0x6E33      	MOVWF       _UART_Tx_Idle_Ptr 
0x2106	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x2108	0x6E34      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x210A	0x0E00      	MOVLW       0
0x210C	0x6E35      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x210E	0x0E00      	MOVLW       0
0x2110	0x6E36      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67.c,23 :: 		
0x2112	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x2114	0x0E90      	MOVLW       144
0x2116	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x2118	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x211A	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x211C	0xAA9E      	BTFSS       PIR1, 5 
0x211E	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x2120	0xF000CFAE  	MOVFF       RCREG, R0
0x2124	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x2126	0x0012      	RETURN      0
; end of _UART1_Init
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x2128	0x0E00      	MOVLW       0
0x212A	0xBA9E      	BTFSC       PIR1, 5 
0x212C	0x0E01      	MOVLW       1
0x212E	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x2130	0x0012      	RETURN      0
; end of _UART1_Data_Ready
0x214C	0xF015EE10  	LFSR        1, 21
0x2150	0x0E1A      	MOVLW       26
0x2152	0x6E00      	MOVWF       R0 
0x2154	0x0E01      	MOVLW       1
0x2156	0x6E01      	MOVWF       R1 
0x2158	0x0E32      	MOVLW       50
0x215A	0x6EF6      	MOVWF       4086 
0x215C	0x0E21      	MOVLW       33
0x215E	0x6EF7      	MOVWF       TBLPTRH 
0x2160	0x0E00      	MOVLW       0
0x2162	0x6EF8      	MOVWF       TBLPTRU 
0x2164	0xF010EC61  	CALL        8386, 0
0x2168	0x0012      	RETURN      0
;SERIAL.c,0 :: ?ICS?lstr2_SERIAL
0x2132	0x454C ;?ICS?lstr2_SERIAL+0
0x2134	0x2044 ;?ICS?lstr2_SERIAL+2
0x2136	0x4E45 ;?ICS?lstr2_SERIAL+4
0x2138	0x4543 ;?ICS?lstr2_SERIAL+6
0x213A	0x444E ;?ICS?lstr2_SERIAL+8
0x213C	0x4449 ;?ICS?lstr2_SERIAL+10
0x213E	0x004F ;?ICS?lstr2_SERIAL+12
; end of ?ICS?lstr2_SERIAL
;SERIAL.c,0 :: ?ICS?lstr1_SERIAL
0x2140	0x454C ;?ICS?lstr1_SERIAL+0
0x2142	0x2044 ;?ICS?lstr1_SERIAL+2
0x2144	0x5041 ;?ICS?lstr1_SERIAL+4
0x2146	0x4741 ;?ICS?lstr1_SERIAL+6
0x2148	0x4441 ;?ICS?lstr1_SERIAL+8
0x214A	0x004F ;?ICS?lstr1_SERIAL+10
; end of ?ICS?lstr1_SERIAL
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x2000     [114]    _main
0x2072      [14]    _UART1_Write
0x2080      [18]    _UART1_Read
0x2092      [48]    _UART1_Write_Text
0x20C2      [16]    ___CC2DW
0x20D2      [86]    _UART1_Init
0x2128      [10]    _UART1_Data_Ready
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [14]    ?lstr2_SERIAL
0x0023      [12]    ?lstr1_SERIAL
0x002F       [4]    _UART_Wr_Ptr
0x0033       [4]    _UART_Tx_Idle_Ptr
0x0037       [4]    _UART_Rd_Ptr
0x003B       [4]    _UART_Rdy_Ptr
0x003F       [1]    main_Caracter_L2
0x0040       [2]    FARG_UART1_Write_Text_uart_text
0x0042       [1]    UART1_Write_Text_data__L0
0x0043       [1]    UART1_Write_Text_counter_L0
0x0044       [1]    FARG_UART1_Write_data_
0x0F5B       [0]    ANSA2_bit
0x0F5D       [1]    ANSELC
0x0F80       [1]    PORTA
0x0F89       [0]    LATA4_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA4_bit
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2132      [14]    ?ICS?lstr2_SERIAL
0x2140      [12]    ?ICS?lstr1_SERIAL
