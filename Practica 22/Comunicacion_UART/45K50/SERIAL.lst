;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15/10/2021 02:00:56 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF010EF00  	GOTO        8192
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_main:
;SERIAL.c,21 :: 		void main() org 0x2000               //Se define el registro a partir del cual se alamcenara el codigo lógico
;SERIAL.c,23 :: 		ANSELC = 0;
0x2000	0x010F      	MOVLB       15
0x2002	0x6B5D      	CLRF        ANSELC, 1
;SERIAL.c,24 :: 		TRISB = 0x00;                      //Puerto B como salida
0x2004	0x6A93      	CLRF        TRISB 
;SERIAL.c,25 :: 		LATA4_bit = 0;                     //Pin A4 en estado bajo
0x2006	0x9889      	BCF         LATA4_bit, BitPos(LATA4_bit+0) 
;SERIAL.c,26 :: 		TRISA4_bit = 0;                    //Pin A4 como salida
0x2008	0x9892      	BCF         TRISA4_bit, BitPos(TRISA4_bit+0) 
;SERIAL.c,27 :: 		TRISA2_bit = 1;                    //Pin A2 como salida
0x200A	0x8492      	BSF         TRISA2_bit, BitPos(TRISA2_bit+0) 
;SERIAL.c,28 :: 		ANSA2_bit = 0;                     //Pin A2 como digital
0x200C	0x955B      	BCF         ANSA2_bit, BitPos(ANSA2_bit+0), 1
;SERIAL.c,29 :: 		UART1_Init(9600);                  //Se asigna la velocidad del baudrate
0x200E	0x86B8      	BSF         BAUDCON, 3, 0
0x2010	0x0E04      	MOVLW       4
0x2012	0x6EB0      	MOVWF       SPBRGH 
0x2014	0x0EE1      	MOVLW       225
0x2016	0x6EAF      	MOVWF       SPBRG 
0x2018	0x84AC      	BSF         TXSTA, 2, 0
0x201A	0xD82F      	RCALL       _UART1_Init
;SERIAL.c,30 :: 		while(1){
L_main0:
;SERIAL.c,31 :: 		if (UART1_Data_Ready() == 1) {   //Pregunta si ha recibido algún dato por el puerto serial
0x201C	0xD859      	RCALL       _UART1_Data_Ready
0x201E	0x5000      	MOVF        R0, 0 
0x2020	0x0A01      	XORLW       1
0x2022	0xE119      	BNZ         L_main2
;SERIAL.c,33 :: 		char Caracter = UART1_Read();  //Guarda el caracter
0x2024	0xD81A      	RCALL       _UART1_Read
0x2026	0xF025C000  	MOVFF       R0, main_Caracter_L2
;SERIAL.c,35 :: 		if (Caracter == '0') {
0x202A	0x5000      	MOVF        R0, 0 
0x202C	0x0A30      	XORLW       48
0x202E	0xE102      	BNZ         L_main3
;SERIAL.c,36 :: 		LED_OFF;                     //Apaga el LED
0x2030	0x9889      	BCF         LATA4_bit, BitPos(LATA4_bit+0) 
;SERIAL.c,37 :: 		}
0x2032	0xD011      	BRA         L_main4
L_main3:
;SERIAL.c,38 :: 		else if (Caracter == '1') {
0x2034	0x5025      	MOVF        main_Caracter_L2, 0 
0x2036	0x0A31      	XORLW       49
0x2038	0xE102      	BNZ         L_main5
;SERIAL.c,39 :: 		LED_ON;                      //Enciende el LED
0x203A	0x8889      	BSF         LATA4_bit, BitPos(LATA4_bit+0) 
;SERIAL.c,40 :: 		}
0x203C	0xD00C      	BRA         L_main6
L_main5:
;SERIAL.c,41 :: 		else if (Caracter == '?') {
0x203E	0x5025      	MOVF        main_Caracter_L2, 0 
0x2040	0x0A3F      	XORLW       63
0x2042	0xE109      	BNZ         L_main7
;SERIAL.c,42 :: 		if (BOTON==1) {              //Pregunta el estado del botón
0x2044	0xA480      	BTFSS       PORTA, 2 
0x2046	0xD004      	BRA         L_main8
;SERIAL.c,43 :: 		UART1_Write('0');          //Envía un 0 si el botón no está presionado
0x2048	0x0E30      	MOVLW       48
0x204A	0x6E26      	MOVWF       FARG_UART1_Write_data_ 
0x204C	0xD80F      	RCALL       _UART1_Write
;SERIAL.c,44 :: 		} else {
0x204E	0xD003      	BRA         L_main9
L_main8:
;SERIAL.c,45 :: 		UART1_Write('1');          //Envía un 1 si el botón está presionado
0x2050	0x0E31      	MOVLW       49
0x2052	0x6E26      	MOVWF       FARG_UART1_Write_data_ 
0x2054	0xD80B      	RCALL       _UART1_Write
;SERIAL.c,46 :: 		}
L_main9:
;SERIAL.c,47 :: 		}
L_main7:
L_main6:
L_main4:
;SERIAL.c,48 :: 		}
L_main2:
;SERIAL.c,49 :: 		}
0x2056	0xD7E2      	BRA         L_main0
;SERIAL.c,50 :: 		}
L_end_main:
0x2058	0xD7FF      	BRA         $+0
; end of _main
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x205A	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x205E	0xA2AB      	BTFSS       RCSTA, 1 
0x2060	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x2062	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x2064	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x2066	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x206A	0x0012      	RETURN      0
; end of _UART1_Read
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x206C	0xB2AC      	BTFSC       TXSTA, 1 
0x206E	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x2070	0x0000      	NOP
0x2072	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x2074	0xFFADC026  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x2078	0x0012      	RETURN      0
; end of _UART1_Write
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x207A	0x0E6C      	MOVLW       _UART1_Write
0x207C	0x6E1D      	MOVWF       _UART_Wr_Ptr 
0x207E	0x0E20      	MOVLW       hi_addr(_UART1_Write)
0x2080	0x6E1E      	MOVWF       _UART_Wr_Ptr+1 
0x2082	0x0E26      	MOVLW       FARG_UART1_Write_data_
0x2084	0x6E1F      	MOVWF       _UART_Wr_Ptr+2 
0x2086	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x2088	0x6E20      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_c67.c,19 :: 		
0x208A	0x0E5A      	MOVLW       _UART1_Read
0x208C	0x6E21      	MOVWF       _UART_Rd_Ptr 
0x208E	0x0E20      	MOVLW       hi_addr(_UART1_Read)
0x2090	0x6E22      	MOVWF       _UART_Rd_Ptr+1 
0x2092	0x0E00      	MOVLW       0
0x2094	0x6E23      	MOVWF       _UART_Rd_Ptr+2 
0x2096	0x0E00      	MOVLW       0
0x2098	0x6E24      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67.c,20 :: 		
0x209A	0x0ED0      	MOVLW       _UART1_Data_Ready
0x209C	0x6E15      	MOVWF       _UART_Rdy_Ptr 
0x209E	0x0E20      	MOVLW       hi_addr(_UART1_Data_Ready)
0x20A0	0x6E16      	MOVWF       _UART_Rdy_Ptr+1 
0x20A2	0x0E00      	MOVLW       0
0x20A4	0x6E17      	MOVWF       _UART_Rdy_Ptr+2 
0x20A6	0x0E00      	MOVLW       0
0x20A8	0x6E18      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67.c,21 :: 		
0x20AA	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x20AC	0x6E19      	MOVWF       _UART_Tx_Idle_Ptr 
0x20AE	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x20B0	0x6E1A      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x20B2	0x0E00      	MOVLW       0
0x20B4	0x6E1B      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x20B6	0x0E00      	MOVLW       0
0x20B8	0x6E1C      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67.c,23 :: 		
0x20BA	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x20BC	0x0E90      	MOVLW       144
0x20BE	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x20C0	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x20C2	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x20C4	0xAA9E      	BTFSS       PIR1, 5 
0x20C6	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x20C8	0xF000CFAE  	MOVFF       RCREG, R0
0x20CC	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x20CE	0x0012      	RETURN      0
; end of _UART1_Init
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x20D0	0x0E00      	MOVLW       0
0x20D2	0xBA9E      	BTFSC       PIR1, 5 
0x20D4	0x0E01      	MOVLW       1
0x20D6	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x20D8	0x0012      	RETURN      0
; end of _UART1_Data_Ready
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x2000      [90]    _main
0x205A      [18]    _UART1_Read
0x206C      [14]    _UART1_Write
0x207A      [86]    _UART1_Init
0x20D0      [10]    _UART1_Data_Ready
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [4]    _UART_Rdy_Ptr
0x0019       [4]    _UART_Tx_Idle_Ptr
0x001D       [4]    _UART_Wr_Ptr
0x0021       [4]    _UART_Rd_Ptr
0x0025       [1]    main_Caracter_L2
0x0026       [1]    FARG_UART1_Write_data_
0x0F5B       [0]    ANSA2_bit
0x0F5D       [1]    ANSELC
0x0F80       [1]    PORTA
0x0F89       [0]    LATA4_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA4_bit
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
