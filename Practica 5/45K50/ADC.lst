;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14/10/2021 11:48:38 a. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF010EF00  	GOTO        8192
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_main:
0x2000	0xF010EC90  	CALL        8480, 0
;ADC.c,23 :: 		void main() org 0x2000                     //vector de inicio usando bootloader MICROSIDE
;ADC.c,25 :: 		TRISA0_bit = 1;                        //PIN como entrada
0x2004	0x8092      	BSF         TRISA0_bit, BitPos(TRISA0_bit+0) 
;ADC.c,26 :: 		ANSA0_bit = 1;                         //PIN como analógico
0x2006	0x010F      	MOVLB       15
0x2008	0x815B      	BSF         ANSA0_bit, BitPos(ANSA0_bit+0), 1
;ADC.c,27 :: 		TRISB = 0;
0x200A	0x6A93      	CLRF        TRISB 
;ADC.c,28 :: 		ANSELB = 0;
0x200C	0x6B5C      	CLRF        ANSELB, 1
;ADC.c,30 :: 		while (1)
L_main0:
;ADC.c,32 :: 		ValorPOT=ADC_Read(0);              //Leer el valor del potenciometro
0x200E	0x6A18      	CLRF        FARG_ADC_Read_channel 
0x2010	0xD868      	RCALL       _ADC_Read
0x2012	0xF016C000  	MOVFF       R0, _ValorPOT
0x2016	0xF017C001  	MOVFF       R1, _ValorPOT+1
;ADC.c,34 :: 		if(ValorPot <=114)                //Compara el valor de el ADC con 114
0x201A	0x0E00      	MOVLW       0
0x201C	0x6E02      	MOVWF       R2 
0x201E	0x5001      	MOVF        R1, 0 
0x2020	0x5C02      	SUBWF       R2, 0 
0x2022	0xE102      	BNZ         L__main20
0x2024	0x5000      	MOVF        R0, 0 
0x2026	0x0872      	SUBLW       114
L__main20:
0x2028	0xE302      	BNC         L_main2
;ADC.c,36 :: 		LATB=0b00000000;             // Leds activos
0x202A	0x6A8A      	CLRF        LATB 
;ADC.c,37 :: 		}
0x202C	0xD049      	BRA         L_main3
L_main2:
;ADC.c,38 :: 		else if(ValorPot <=228)        //Compara el valor de el ADC con 228
0x202E	0x0E00      	MOVLW       0
0x2030	0x6E00      	MOVWF       R0 
0x2032	0x5017      	MOVF        _ValorPOT+1, 0 
0x2034	0x5C00      	SUBWF       R0, 0 
0x2036	0xE102      	BNZ         L__main21
0x2038	0x5016      	MOVF        _ValorPOT, 0 
0x203A	0x08E4      	SUBLW       228
L__main21:
0x203C	0xE303      	BNC         L_main4
;ADC.c,40 :: 		LATB=0b00000001;             // Leds activos
0x203E	0x0E01      	MOVLW       1
0x2040	0x6E8A      	MOVWF       LATB 
;ADC.c,41 :: 		}
0x2042	0xD03E      	BRA         L_main5
L_main4:
;ADC.c,42 :: 		else if(ValorPot <=342)      //Compara el valor de el ADC con 342
0x2044	0x5017      	MOVF        _ValorPOT+1, 0 
0x2046	0x0801      	SUBLW       1
0x2048	0xE102      	BNZ         L__main22
0x204A	0x5016      	MOVF        _ValorPOT, 0 
0x204C	0x0856      	SUBLW       86
L__main22:
0x204E	0xE303      	BNC         L_main6
;ADC.c,44 :: 		LATB=0b00000011;             // Leds activos
0x2050	0x0E03      	MOVLW       3
0x2052	0x6E8A      	MOVWF       LATB 
;ADC.c,45 :: 		}
0x2054	0xD035      	BRA         L_main7
L_main6:
;ADC.c,46 :: 		else if(ValorPot <=456)      //Compara el valor de el ADC con 456
0x2056	0x5017      	MOVF        _ValorPOT+1, 0 
0x2058	0x0801      	SUBLW       1
0x205A	0xE102      	BNZ         L__main23
0x205C	0x5016      	MOVF        _ValorPOT, 0 
0x205E	0x08C8      	SUBLW       200
L__main23:
0x2060	0xE303      	BNC         L_main8
;ADC.c,48 :: 		LATB=0b00000111;             // Leds activos
0x2062	0x0E07      	MOVLW       7
0x2064	0x6E8A      	MOVWF       LATB 
;ADC.c,49 :: 		}
0x2066	0xD02C      	BRA         L_main9
L_main8:
;ADC.c,50 :: 		else if(ValorPot <=570)      //Compara el valor de el ADC con 570
0x2068	0x5017      	MOVF        _ValorPOT+1, 0 
0x206A	0x0802      	SUBLW       2
0x206C	0xE102      	BNZ         L__main24
0x206E	0x5016      	MOVF        _ValorPOT, 0 
0x2070	0x083A      	SUBLW       58
L__main24:
0x2072	0xE303      	BNC         L_main10
;ADC.c,52 :: 		LATB=0b00001111;             // Leds activos
0x2074	0x0E0F      	MOVLW       15
0x2076	0x6E8A      	MOVWF       LATB 
;ADC.c,53 :: 		}
0x2078	0xD023      	BRA         L_main11
L_main10:
;ADC.c,54 :: 		else if(ValorPot <=684)     //Compara el valor de el ADC con 684
0x207A	0x5017      	MOVF        _ValorPOT+1, 0 
0x207C	0x0802      	SUBLW       2
0x207E	0xE102      	BNZ         L__main25
0x2080	0x5016      	MOVF        _ValorPOT, 0 
0x2082	0x08AC      	SUBLW       172
L__main25:
0x2084	0xE303      	BNC         L_main12
;ADC.c,56 :: 		LATB=0b00011111;             // Leds activos
0x2086	0x0E1F      	MOVLW       31
0x2088	0x6E8A      	MOVWF       LATB 
;ADC.c,57 :: 		}
0x208A	0xD01A      	BRA         L_main13
L_main12:
;ADC.c,58 :: 		else if(ValorPot <=798)      //Compara el valor de el ADC con 798
0x208C	0x5017      	MOVF        _ValorPOT+1, 0 
0x208E	0x0803      	SUBLW       3
0x2090	0xE102      	BNZ         L__main26
0x2092	0x5016      	MOVF        _ValorPOT, 0 
0x2094	0x081E      	SUBLW       30
L__main26:
0x2096	0xE303      	BNC         L_main14
;ADC.c,60 :: 		LATB=0b00111111;             // Leds activos
0x2098	0x0E3F      	MOVLW       63
0x209A	0x6E8A      	MOVWF       LATB 
;ADC.c,61 :: 		}
0x209C	0xD011      	BRA         L_main15
L_main14:
;ADC.c,62 :: 		else if(ValorPot <=912)      //Compara el valor de el ADC con 912
0x209E	0x5017      	MOVF        _ValorPOT+1, 0 
0x20A0	0x0803      	SUBLW       3
0x20A2	0xE102      	BNZ         L__main27
0x20A4	0x5016      	MOVF        _ValorPOT, 0 
0x20A6	0x0890      	SUBLW       144
L__main27:
0x20A8	0xE303      	BNC         L_main16
;ADC.c,64 :: 		LATB=0b01111111;             // Leds activos
0x20AA	0x0E7F      	MOVLW       127
0x20AC	0x6E8A      	MOVWF       LATB 
;ADC.c,65 :: 		}
0x20AE	0xD008      	BRA         L_main17
L_main16:
;ADC.c,66 :: 		else if(ValorPot <=1024)     //Compara el valor de el ADC con 1024
0x20B0	0x5017      	MOVF        _ValorPOT+1, 0 
0x20B2	0x0804      	SUBLW       4
0x20B4	0xE102      	BNZ         L__main28
0x20B6	0x5016      	MOVF        _ValorPOT, 0 
0x20B8	0x0800      	SUBLW       0
L__main28:
0x20BA	0xE302      	BNC         L_main18
;ADC.c,68 :: 		LATB=0b11111111;             // Leds activos
0x20BC	0x0EFF      	MOVLW       255
0x20BE	0x6E8A      	MOVWF       LATB 
;ADC.c,69 :: 		}
L_main18:
L_main17:
L_main15:
L_main13:
L_main11:
L_main9:
L_main7:
L_main5:
L_main3:
;ADC.c,71 :: 		}
0x20C0	0xD7A6      	BRA         L_main0
;ADC.c,73 :: 		}
L_end_main:
0x20C2	0xD7FF      	BRA         $+0
; end of _main
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x20C4	0x0E57      	MOVLW       87
0x20C6	0x6E0D      	MOVWF       R13, 0
L_Delay_22us2:
0x20C8	0x2E0D      	DECFSZ      R13, 1, 0
0x20CA	0xD7FE      	BRA         L_Delay_22us2
0x20CC	0x0000      	NOP
0x20CE	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x20D0	0x0012      	RETURN      0
; end of _Delay_22us
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x20D2	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x20D4	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x20D8	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x20DA	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x20DC	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x20DE	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x20E0	0x0012      	RETURN      0
; end of ___CC2DW
_ADC_Read:
;__Lib_ADC_4xK50.c,68 :: 		
;__Lib_ADC_4xK50.c,71 :: 		
0x20E2	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_4xK50.c,72 :: 		
0x20E4	0x1C15      	COMF        _vref_mask, 0 
0x20E6	0x6E00      	MOVWF       R0 
0x20E8	0x5000      	MOVF        R0, 0 
0x20EA	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_4xK50.c,73 :: 		
0x20EC	0x0E07      	MOVLW       7
0x20EE	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_4xK50.c,74 :: 		
0x20F0	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_4xK50.c,75 :: 		
0x20F2	0xF000C018  	MOVFF       FARG_ADC_Read_channel, R0
0x20F6	0x3600      	RLCF        R0, 1 
0x20F8	0x9000      	BCF         R0, 0 
0x20FA	0x3600      	RLCF        R0, 1 
0x20FC	0x9000      	BCF         R0, 0 
0x20FE	0x5000      	MOVF        R0, 0 
0x2100	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_4xK50.c,76 :: 		
0x2102	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_4xK50.c,77 :: 		
0x2104	0xDFDF      	RCALL       _Delay_22us
;__Lib_ADC_4xK50.c,78 :: 		
0x2106	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_4xK50.c,79 :: 		
L_ADC_Read6:
0x2108	0xA2C2      	BTFSS       ADCON0, 1 
0x210A	0xD001      	BRA         L_ADC_Read7
;__Lib_ADC_4xK50.c,80 :: 		
0x210C	0xD7FD      	BRA         L_ADC_Read6
L_ADC_Read7:
;__Lib_ADC_4xK50.c,81 :: 		
0x210E	0xF001CFC4  	MOVFF       ADRESH, R1
0x2112	0x6A00      	CLRF        R0 
;__Lib_ADC_4xK50.c,82 :: 		
0x2114	0x50C3      	MOVF        ADRESL, 0 
0x2116	0x1200      	IORWF       R0, 1 
0x2118	0x0E00      	MOVLW       0
0x211A	0x1201      	IORWF       R1, 1 
;__Lib_ADC_4xK50.c,83 :: 		
0x211C	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_4xK50.c,85 :: 		
;__Lib_ADC_4xK50.c,86 :: 		
L_end_ADC_Read:
0x211E	0x0012      	RETURN      0
; end of _ADC_Read
0x2120	0xF015EE10  	LFSR        1, 21
0x2124	0x0E01      	MOVLW       1
0x2126	0x6E00      	MOVWF       R0 
0x2128	0x0E01      	MOVLW       1
0x212A	0x6E01      	MOVWF       R1 
0x212C	0x0EFF      	MOVLW       255
0x212E	0x6EF6      	MOVWF       4086 
0x2130	0x0E1F      	MOVLW       31
0x2132	0x6EF7      	MOVWF       TBLPTRH 
0x2134	0x0E00      	MOVLW       0
0x2136	0x6EF8      	MOVWF       TBLPTRU 
0x2138	0xF010EC69  	CALL        8402, 0
0x213C	0x0012      	RETURN      0
;__Lib_ADC_4xK50.c,0 :: ?ICS_vref_mask
0x1FFF	0x0F ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x2000     [196]    _main
0x20C4      [14]    _Delay_22us
0x20D2      [16]    ___CC2DW
0x20E2      [62]    _ADC_Read
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _vref_mask
0x0016       [2]    _ValorPOT
0x0018       [1]    FARG_ADC_Read_channel
0x0F5B       [0]    ANSA0_bit
0x0F5C       [1]    ANSELB
0x0F8A       [1]    LATB
0x0F92       [0]    TRISA0_bit
0x0F93       [1]    TRISB
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1FFF       [1]    ?ICS_vref_mask
