;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 25/09/2021 11:05:31 a. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF010EF00  	GOTO        8192
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_main:
0x2000	0xF010EC68  	CALL        8400, 0
;ADC SetPoint.c,18 :: 		void main() org 0x2000                         //vector de inicio usando bootloader MICROSIDE
;ADC SetPoint.c,20 :: 		LATA1_bit = 0;                             //SALIDA A 0
0x2004	0x9289      	BCF         LATA1_bit, BitPos(LATA1_bit+0) 
;ADC SetPoint.c,21 :: 		TRISA1_bit = 0;                            //PIN COMO SALIDA
0x2006	0x9292      	BCF         TRISA1_bit, BitPos(TRISA1_bit+0) 
;ADC SetPoint.c,22 :: 		ANSA1_bit = 0;                             //PIN COMO DIGITAL
0x2008	0x010F      	MOVLB       15
0x200A	0x935B      	BCF         ANSA1_bit, BitPos(ANSA1_bit+0), 1
;ADC SetPoint.c,23 :: 		TRISA3_bit = 1;                            //PIN como entrada
0x200C	0x8692      	BSF         TRISA3_bit, BitPos(TRISA3_bit+0) 
;ADC SetPoint.c,24 :: 		ANSA3_bit = 1;                             //PIN como analógico
0x200E	0x875B      	BSF         ANSA3_bit, BitPos(ANSA3_bit+0), 1
;ADC SetPoint.c,26 :: 		ADC_Init_Advanced(_ADC_INTERNAL_REF);      //Voltaje de referencia a VDD y GND
0x2010	0x6A1D      	CLRF        FARG_ADC_Init_Advanced_reference 
0x2012	0xD821      	RCALL       _ADC_Init_Advanced
;ADC SetPoint.c,27 :: 		while (1)
L_main0:
;ADC SetPoint.c,29 :: 		ValorPOT=ADC_Get_Sample(3);            //Leer el valor del potenciometro
0x2014	0x0E03      	MOVLW       3
0x2016	0x6E1D      	MOVWF       FARG_ADC_Get_Sample_channel 
0x2018	0xD843      	RCALL       _ADC_Get_Sample
0x201A	0xF01BC000  	MOVFF       R0, _ValorPOT
0x201E	0xF01CC001  	MOVFF       R1, _ValorPOT+1
;ADC SetPoint.c,31 :: 		if(ValorPot <= 512)                    //Compara el valor de el ADC con 512
0x2022	0x5001      	MOVF        R1, 0 
0x2024	0x0802      	SUBLW       2
0x2026	0xE102      	BNZ         L__main5
0x2028	0x5000      	MOVF        R0, 0 
0x202A	0x0800      	SUBLW       0
L__main5:
0x202C	0xE302      	BNC         L_main2
;ADC SetPoint.c,33 :: 		LED_OFF;                           //Apaga el LED
0x202E	0x9289      	BCF         LATA1_bit, BitPos(LATA1_bit+0) 
;ADC SetPoint.c,34 :: 		}
0x2030	0xD001      	BRA         L_main3
L_main2:
;ADC SetPoint.c,38 :: 		LED_ON;   //Enciende el LED
0x2032	0x8289      	BSF         LATA1_bit, BitPos(LATA1_bit+0) 
;ADC SetPoint.c,39 :: 		}
L_main3:
;ADC SetPoint.c,41 :: 		}
0x2034	0xD7EF      	BRA         L_main0
;ADC SetPoint.c,42 :: 		}
L_end_main:
0x2036	0xD7FF      	BRA         $+0
; end of _main
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x2038	0x0E57      	MOVLW       87
0x203A	0x6E0D      	MOVWF       R13, 0
L_Delay_22us2:
0x203C	0x2E0D      	DECFSZ      R13, 1, 0
0x203E	0xD7FE      	BRA         L_Delay_22us2
0x2040	0x0000      	NOP
0x2042	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x2044	0x0012      	RETURN      0
; end of _Delay_22us
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x2046	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x2048	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x204C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x204E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x2050	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x2052	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x2054	0x0012      	RETURN      0
; end of ___CC2DW
_ADC_Init_Advanced:
;__Lib_ADC_4xK50.c,32 :: 		
;__Lib_ADC_4xK50.c,33 :: 		
0x2056	0x0EA0      	MOVLW       _ADC_Get_Sample
0x2058	0x6E17      	MOVWF       _ADC_Get_Sample_Ptr 
0x205A	0x0E20      	MOVLW       hi_addr(_ADC_Get_Sample)
0x205C	0x6E18      	MOVWF       _ADC_Get_Sample_Ptr+1 
0x205E	0x0E1D      	MOVLW       FARG_ADC_Get_Sample_channel
0x2060	0x6E19      	MOVWF       _ADC_Get_Sample_Ptr+2 
0x2062	0x0E00      	MOVLW       hi_addr(FARG_ADC_Get_Sample_channel)
0x2064	0x6E1A      	MOVWF       _ADC_Get_Sample_Ptr+3 
;__Lib_ADC_4xK50.c,35 :: 		
0x2066	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_4xK50.c,36 :: 		
0x2068	0x5015      	MOVF        _mult_mask, 0 
0x206A	0x141D      	ANDWF       FARG_ADC_Init_Advanced_reference, 0 
0x206C	0x6E00      	MOVWF       R0 
0x206E	0xE009      	BZ          L_ADC_Init_Advanced0
;__Lib_ADC_4xK50.c,37 :: 		
0x2070	0x5015      	MOVF        _mult_mask, 0 
0x2072	0x141D      	ANDWF       FARG_ADC_Init_Advanced_reference, 0 
0x2074	0x6E7D      	MOVWF       VREFCON0 
;__Lib_ADC_4xK50.c,38 :: 		
0x2076	0x8E7D      	BSF         VREFCON0, 7 
;__Lib_ADC_4xK50.c,39 :: 		
L_ADC_Init_Advanced1:
0x2078	0xBC7D      	BTFSC       VREFCON0, 6 
0x207A	0xD002      	BRA         L_ADC_Init_Advanced2
;__Lib_ADC_4xK50.c,40 :: 		
0x207C	0x0000      	NOP
0x207E	0xD7FC      	BRA         L_ADC_Init_Advanced1
L_ADC_Init_Advanced2:
;__Lib_ADC_4xK50.c,41 :: 		
0x2080	0xD001      	BRA         L_ADC_Init_Advanced3
L_ADC_Init_Advanced0:
;__Lib_ADC_4xK50.c,43 :: 		
0x2082	0x6A7D      	CLRF        VREFCON0 
L_ADC_Init_Advanced3:
;__Lib_ADC_4xK50.c,44 :: 		
0x2084	0x1C16      	COMF        _vref_mask, 0 
0x2086	0x6E00      	MOVWF       R0 
0x2088	0x5000      	MOVF        R0, 0 
0x208A	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_4xK50.c,45 :: 		
0x208C	0x5016      	MOVF        _vref_mask, 0 
0x208E	0x141D      	ANDWF       FARG_ADC_Init_Advanced_reference, 0 
0x2090	0x6E00      	MOVWF       R0 
0x2092	0x5000      	MOVF        R0, 0 
0x2094	0x12C1      	IORWF       ADCON1, 1 
;__Lib_ADC_4xK50.c,46 :: 		
0x2096	0x0E07      	MOVLW       7
0x2098	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_4xK50.c,47 :: 		
0x209A	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_4xK50.c,48 :: 		
0x209C	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_4xK50.c,49 :: 		
L_end_ADC_Init_Advanced:
0x209E	0x0012      	RETURN      0
; end of _ADC_Init_Advanced
_ADC_Get_Sample:
;__Lib_ADC_4xK50.c,51 :: 		
;__Lib_ADC_4xK50.c,54 :: 		
0x20A0	0x0E83      	MOVLW       131
0x20A2	0x16C2      	ANDWF       ADCON0, 1 
;__Lib_ADC_4xK50.c,56 :: 		
0x20A4	0xF000C01D  	MOVFF       FARG_ADC_Get_Sample_channel, R0
0x20A8	0x3600      	RLCF        R0, 1 
0x20AA	0x9000      	BCF         R0, 0 
0x20AC	0x3600      	RLCF        R0, 1 
0x20AE	0x9000      	BCF         R0, 0 
0x20B0	0x5000      	MOVF        R0, 0 
0x20B2	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_4xK50.c,58 :: 		
0x20B4	0xDFC1      	RCALL       _Delay_22us
;__Lib_ADC_4xK50.c,59 :: 		
0x20B6	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_4xK50.c,60 :: 		
L_ADC_Get_Sample4:
0x20B8	0xA2C2      	BTFSS       ADCON0, 1 
0x20BA	0xD001      	BRA         L_ADC_Get_Sample5
;__Lib_ADC_4xK50.c,61 :: 		
0x20BC	0xD7FD      	BRA         L_ADC_Get_Sample4
L_ADC_Get_Sample5:
;__Lib_ADC_4xK50.c,62 :: 		
0x20BE	0xF001CFC4  	MOVFF       ADRESH, R1
0x20C2	0x6A00      	CLRF        R0 
;__Lib_ADC_4xK50.c,63 :: 		
0x20C4	0x50C3      	MOVF        ADRESL, 0 
0x20C6	0x1200      	IORWF       R0, 1 
0x20C8	0x0E00      	MOVLW       0
0x20CA	0x1201      	IORWF       R1, 1 
;__Lib_ADC_4xK50.c,65 :: 		
;__Lib_ADC_4xK50.c,66 :: 		
L_end_ADC_Get_Sample:
0x20CC	0x0012      	RETURN      0
; end of _ADC_Get_Sample
0x20D0	0xF015EE10  	LFSR        1, 21
0x20D4	0x0E02      	MOVLW       2
0x20D6	0x6E00      	MOVWF       R0 
0x20D8	0x0E01      	MOVLW       1
0x20DA	0x6E01      	MOVWF       R1 
0x20DC	0x0ECE      	MOVLW       206
0x20DE	0x6EF6      	MOVWF       4086 
0x20E0	0x0E20      	MOVLW       32
0x20E2	0x6EF7      	MOVWF       TBLPTRH 
0x20E4	0x0E00      	MOVLW       0
0x20E6	0x6EF8      	MOVWF       TBLPTRU 
0x20E8	0xF010EC23  	CALL        8262, 0
0x20EC	0x0012      	RETURN      0
;__Lib_ADC_4xK50.c,0 :: ?ICS_mult_mask
0x20CE	0x30 ;?ICS_mult_mask+0
; end of ?ICS_mult_mask
;__Lib_ADC_4xK50.c,0 :: ?ICS_vref_mask
0x20CF	0x0F ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x2000      [56]    _main
0x2038      [14]    _Delay_22us
0x2046      [16]    ___CC2DW
0x2056      [74]    _ADC_Init_Advanced
0x20A0      [46]    _ADC_Get_Sample
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _mult_mask
0x0016       [1]    _vref_mask
0x0017       [4]    _ADC_Get_Sample_Ptr
0x001B       [2]    _ValorPOT
0x001D       [1]    FARG_ADC_Get_Sample_channel
0x001D       [1]    FARG_ADC_Init_Advanced_reference
0x0F5B       [0]    ANSA3_bit
0x0F5B       [0]    ANSA1_bit
0x0F7D       [1]    VREFCON0
0x0F89       [0]    LATA1_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA3_bit
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x20CE       [1]    ?ICS_mult_mask
0x20CF       [1]    ?ICS_vref_mask
